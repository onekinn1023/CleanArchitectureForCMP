[versions]
agp = "8.2.2"
android-compileSdk = "34"
android-minSdk = "24"
android-targetSdk = "34"
androidx-activityCompose = "1.9.0"
androidx-appcompat = "1.7.0"
androidx-constraintlayout = "2.1.4"
androidx-core-ktx = "1.13.1"
androidx-espresso-core = "3.6.1"
androidx-material = "1.12.0"
androidx-test-junit = "1.2.1"
compose-plugin = "1.6.11"
junit = "4.13.2"
kotlin = "2.0.20"

koin = "4.0.0"
koinComposeMultiplatform = "4.0.0"
koin-annotations = "1.4.0-RC4"
navigationCompose = "2.8.0-alpha10"
lifecycleViewModel = "2.8.6"
lifecycleViewModelCompose = "2.8.0"

core-splashscreen = "1.0.1"

ktor = "2.3.12"

datastore = "1.1.1"

moko = "0.18.0"

datetime = "0.6.0"

decompose = "3.1.0"

napier = "2.7.1"

okio = "3.9.0"

file-kit = "0.8.2"
jetbrainsKotlinJvm = "1.9.22"

ksp = "2.0.20-1.0.25"

plugin = "1.0.0"
kotlinpoet = "2.0.0"

kotlinxSerializationJson = "1.7.3"


[libraries]
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "androidx-core-ktx" }
androidx-test-junit = { group = "androidx.test.ext", name = "junit", version.ref = "androidx-test-junit" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "androidx-espresso-core" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "androidx-appcompat" }
androidx-material = { group = "com.google.android.material", name = "material", version.ref = "androidx-material" }
androidx-constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "androidx-constraintlayout" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }

lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel", version.ref = "lifecycleViewModel"}
lifecycle-viewmodel-compose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycleViewModelCompose"}

koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-compose-viewmodel = { module = "io.insert-koin:koin-compose-viewmodel", version.ref = "koinComposeMultiplatform" }
koin-annotations = {module = "io.insert-koin:koin-annotations", version.ref = "koin-annotations"}
koin-ksp-compiler = {module = "io.insert-koin:koin-ksp-compiler", version.ref = "koin-annotations"}

navigation-compose = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "navigationCompose" }

ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }

datastore = { module = "androidx.datastore:datastore", version.ref = "datastore" }
datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastore" }
androidx-datastore-core-okio = { group = "androidx.datastore", name = "datastore-core-okio", version.ref = "datastore" }
androidx-datastore-preferences-core = { group = "androidx.datastore", name = "datastore-preferences-core", version.ref = "datastore" }


core-splashscreen = { group = "androidx.core", name = "core-splashscreen", version.ref = "core-splashscreen" }

moko-permissions = { module = "dev.icerock.moko:permissions", version.ref = "moko" }
moko-permissions-compose = { module = "dev.icerock.moko:permissions-compose", version.ref = "moko" }

kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "datetime"}

decompose = { module = "com.arkivanov.decompose:decompose", version.ref = "decompose" }
decompose-extensions-compose = { module = "com.arkivanov.decompose:extensions-compose", version.ref = "decompose" }

cmp-napier = { module = "io.github.aakira:napier", version.ref = "napier" }

okio = { module = "com.squareup.okio:okio", version.ref = "okio" }
okio-test = { module = "com.squareup.okio:okio-fakefilesystem", version.ref = "okio" }

file-kit-core = { module = "io.github.vinceglb:filekit-core", version.ref = "file-kit"}
file-kit-compoes = { module = "io.github.vinceglb:filekit-compose", version.ref = "file-kit" }

kotlin-gradlePlugin = { group = "org.jetbrains.kotlin", name = "kotlin-gradle-plugin", version.ref = "kotlin" }
android-gradlePlugin = { group = "com.android.tools.build", name = "gradle", version.ref = "agp" }
compose-gradlePlugin = { module = "org.jetbrains.compose:org.jetbrains.compose.gradle.plugin", version.ref = "compose-plugin" }

compose-android-preview = { module = "org.jetbrains.compose.ui:ui-tooling-preview", version.ref = "compose-plugin"}
compose-runtime = { module = "org.jetbrains.compose.runtime:runtime", version.ref = "compose-plugin" }
compose-fundation = { module = "org.jetbrains.compose.foundation:foundation", version.ref = "compose-plugin"}
compose-material3 = { module = "org.jetbrains.compose.material3:material3", version.ref = "compose-plugin" }
compose-ui = { module = "org.jetbrains.compose.ui:ui", version.ref = "compose-plugin" }
compose-components-resources = { module = "org.jetbrains.compose.components:components-resources", version.ref = "compose-plugin" }
compose-components-uiToolingPreview = { module = "org.jetbrains.compose.components:components-ui-tooling-preview", version.ref = "compose-plugin"}
compose-uiTooling = { module = "org.jetbrains.compose.ui:ui-tooling", version.ref = "compose-plugin" }

ksp-api = { module = "com.google.devtools.ksp:symbol-processing-api", version.ref = "ksp" }
kotlinpoet-ksp = { group = "com.squareup", name = "kotlinpoet-ksp", version.ref = "kotlinpoet" }

kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationJson" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
jetbrains-kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "jetbrainsKotlinJvm" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }

# This is local plugin
cmp-kotlin-multiplatform-application = { id = "com.example.app.kotlinMultiplatform", version.ref = "plugin"}
cmp-kotlin-multiplatform-convention-library = { id = "com.example.app.kmpConventionLibrary", version.ref = "plugin"}
cmp-koin-plugin = { id = "com.example.app.kmpKoinConvention", version.ref = "plugin"}
cmp-kotlin-multiplatform-module = { id = "com.example.app.kotlinModuleConvention", version.ref = "plugin"}
cmp-network-plugin = { id = "com.example.app.kmpKtorConvention", version.ref = "plugin" }
cmp-compose-plugin = { id = "com.example.app.compose", version.ref = "plugin" }

[bundles]
ktor = [
    "ktor-client-core",
    "ktor-client-content-negotiation",
    "ktor-client-auth",
    "ktor-client-logging",
    "ktor-serialization-kotlinx-json",
]
datastore = [
    "datastore",
    "datastore-preferences",
    "androidx-datastore-core-okio",
    "androidx-datastore-preferences-core"
]

decompose = [
    "decompose",
    "decompose-extensions-compose"
]
mock-permissions = [
    "moko-permissions",
    "moko-permissions-compose"
]
file-kit = [
    "file-kit-core",
    "file-kit-compoes"
]
compose = [
    "compose-runtime",
    "compose-fundation",
    "compose-material3",
    "compose-ui",
    "compose-components-resources",
    "compose-components-uiToolingPreview"
]